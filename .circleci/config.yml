# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  style-check:
    docker:
      - image: golang:1.12
    working_directory: /code
    steps:
      - checkout
      - run:
          name: Update go stuff
          command: go get golang.org/x/tools/cmd/goimports && go mod download
      - run:
          name: Check go formatting
          command: |
            files=$(goimports -l .)
            if [ -n "$files" ]; then
              echo "The following file(s) are not properly formatted or their imports are misaligned. Run go fmt/go import on your code:"
              echo "$files"
              exit 1
            fi
  build:
    docker:
      # specify the version you desire here
      - image: gcr.io/cassandra-operator/jdk8-gcloud-sdk:latest
        auth:
          username: _json_key
          password: $GOOGLE_AUTH

    working_directory: ~/cassandra-operator

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      - setup_remote_docker

      - run: make

  release-dev:
    docker:
      # specify the version you desire here
      - image: gcr.io/cassandra-operator/jdk8-gcloud-sdk:latest
        auth:
          username: _json_key
          password: $GOOGLE_AUTH

    working_directory: ~/cassandra-operator

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - run:
          name: Dump Google Cloud Credentials to file
          command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
      - run:
          name: Setup Google Cloud
          command: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json && gcloud --quiet config set project ${GOOGLE_PROJECT_ID} && gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - setup_remote_docker

      - run:
          name: Create Docker images
          command: ./buildenv/build-all

      - run:
          name: Release docker images
          command: ./buildenv/release-all

  test-gcp:
    docker:
          # specify the version you desire here
          - image: gcr.io/cassandra-operator/jdk8-gcloud-sdk:latest
            auth:
              username: _json_key
              password: $GOOGLE_AUTH

    working_directory: ~/cassandra-operator

    environment:
          # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      - run:
          name: Dump Google Cloud Credentials to file
          command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
      - run:
          name: Setup Google Cloud
          command: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json && gcloud --quiet config set project ${GOOGLE_PROJECT_ID} && gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - run:
          name: Setup K8s cluster and Credentials
          command: gcloud --quiet container clusters create ${K8S_CLUSTER_NAME} && gcloud --quiet container clusters get-credentials ${K8S_CLUSTER_NAME}

      - run:
          name: Set up helm
          command: ./test/configurehelm

      - run:
          name: Deploy Operator
          command: ./test/deployoperator && sleep 30

      - run:
          name: Run integration tests
          command: export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcp-key.json; ./test/gcptests

      - run:
          name: Cleanup GCP resources
          command: gcloud --quiet container clusters delete ${K8S_CLUSTER_NAME} --async
          when: always
# TODO branch names will need changing on flip up to master
workflows:
  version: 2
  build_and_test:
    jobs:
      - style-check
      - build:
          requires:
            - style-check
          filters:
            branches:
              ignore:
                - master
                - superdupertopsecretrewrite
      - test-gcp:
          requires:
            - style-check
            - release-dev
      - release-dev:
          requires:
            - style-check
          filters:
            branches:
              only:
                - superdupertopsecretrewrite
